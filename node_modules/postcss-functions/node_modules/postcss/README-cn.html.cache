<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8"/>
        <meta content='text/html; charset=utf-8' http-equiv='Content-Type'/>
        <meta http-equiv='X-UA-Compatible' content='IE=edge'/>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'/>
        <title># PostCSS [![Gitter][chat-img]][chat][chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg[chat]:     https://gitter.im/postc...</title>
        <meta name="description" content="# PostCSS [![Gitter][chat-img]][chat][chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg[chat]:     https://gitter.im/postc...">
        <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png">
<link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png">
<link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png">
<link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png">
<link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png">
<link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png">
<link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png">
<link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png">
<link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
<link rel="icon" type="image/png" sizes="192x192"  href="/android-icon-192x192.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/manifest.json">
<meta name="msapplication-TileColor" content="#90cdf4">
<meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
<meta name="theme-color" content="#90cdf4">

        <link rel="stylesheet" type="text/css" href="/pages/datashaman/sup.datashaman.com/styles/main.css"/>
        <link rel="canonical" href="https://sup.datashaman.com/pages/datashaman/sup.datashaman.com/node_modules/postcss-functions/node_modules/postcss/README-cn.html"/>
        <link rel="alternate" type="application/rss+xml" title="sup" href="https://sup.datashaman.com/pages/datashaman/sup.datashaman.com/feed.xml" />
        <script src="/scripts/feather.min.js" defer></script>
        <script src="/scripts/main.js" defer></script>
    </head>

    <body class="bg-gray-300">
        <div class="container md:mx-auto p-4 md:flex">
            <aside class="flex-none md:w-56 text-center">
                <header class="bg-blue-300 text-4xl md:text-6xl p-2 mb-4 rounded shadow">
                    <h1><a href="/">sup</a></h1>
                </header>

                <div class="bg-yellow-300 text-base md:text-xl p-2 mb-4 rounded shadow">
                    random thoughts.<br>pithy observations.<br>some gear-grinding.
                </div>

                <div class="bg-green-300 p-2 mb-4 md:mb-0 rounded shadow">
                    <ul class="list-none">
                        <li class="inline-block p-2">
                            <a href="https://github.com/datashaman" target="_blank" rel="noopener noreferer" aria-label="github">
                                <i data-feather="github"></i>
                            </a>
                        </li>
                        <li class="inline-block p-2">
                            <a href="https://twitter.com/data_shaman" target="_blank" rel="noopener noreferer" aria-label="twitter">
                                <i data-feather="twitter"></i>
                            </a>
                        </li>
                        <li class="inline-block p-2">
                            <a href="/pages/datashaman/sup.datashaman.com/feed.xml" target="_blank" rel="noopener noreferer" aria-label="rss feed">
                                <i data-feather="rss"></i>
                            </a>
                        </li>
                    </ul>
                </div>
            </aside>

            <section class="flex-grow md:px-4">
                <article class="bg-white p-4 mb-4 rounded shadow">
  <a href="/node_modules/postcss-functions/node_modules/postcss/README-cn.html"><h2>PostCSS [![Gitter][chat-img]][chat]</h2></a>
  <hr>
  <h1 id="postcss-">PostCSS <a href="https://gitter.im/postcss/postcss"><img src="https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg" alt="Gitter" /></a></h1>

<p><img align="right" width="95" height="95" alt="哲学家的石头 - PostCSS 的 logo" src="http://postcss.github.io/postcss/logo.svg" /></p>

<p>PostCSS 是一个允许使用 JS 插件转换样式的工具。
这些插件可以检查（lint）你的 CSS，支持 CSS Variables 和 Mixins，
编译尚未被浏览器广泛支持的先进的 CSS 语法，内联图片，以及其它很多优秀的功能。</p>

<p>PostCSS 在工业界被广泛地应用，其中不乏很多有名的行业领导者，如：维基百科，Twitter，阿里巴巴，
JetBrains。PostCSS 的 <a href="https://github.com/postcss/autoprefixer">Autoprefixer</a> 插件是最流行的 CSS 处理工具之一。</p>

<p>PostCSS 接收一个 CSS 文件并提供了一个 API 来分析、修改它的规则（通过把 CSS 规则转换成一个<a href="https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E8%AA%9E%E6%B3%95%E6%A8%B9">抽象语法树</a>的方式）。在这之后，这个 API 便可被许多<a href="https://github.com/postcss/postcss/blob/master/README-cn.md#%E6%8F%92%E4%BB%B6">插件</a>利用来做有用的事情，比如寻错或自动添加 CSS vendor 前缀。</p>

<p><strong>Twitter 账号:</strong> <a href="https://twitter.com/postcss">@postcss</a><br />
<strong>支持 / 讨论:</strong>   <a href="https://gitter.im/postcss/postcss">Gitter</a><br /></p>

<p>如果需要 PostCSS 商业支持（如咨询，提升公司的前端文化，
PostCSS 插件），请联系 <a href="https://evilmartians.com/?utm_source=postcss">Evil Martians</a>
邮箱 <a href="mailto:surrender@evilmartians.com">surrender@evilmartians.com</a>。</p>

<p><a href="https://evilmartians.com/?utm_source=postcss">
  <img src="https://evilmartians.com/badges/sponsored-by-evil-martians.svg" alt="由 Evil Martians 赞助" width="236" height="54" />
</a></p>

<h2 id="插件">插件</h2>

<p>截止到目前，PostCSS 有 200 多个插件。你可以在 <a href="https://github.com/postcss/postcss/blob/master/docs/plugins.md">插件列表</a> 或 <a href="http://postcss.parts">搜索目录</a> 找到它们。
下方的列表是我们最喜欢的插件 - 它们很好地演示了我们可以用 PostCSS 做些什么。</p>

<p>如果你有任何新的想法，<a href="https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md">开发 PostCSS 插件</a> 非常简单易上手。</p>

<h3 id="解决全局-css-的问题">解决全局 CSS 的问题</h3>

<ul>
  <li><a href="https://github.com/postcss/postcss-use"><code class="highlighter-rouge">postcss-use</code></a> 允许你在 CSS 里明确地设置 PostCSS 插件，并且只在当前文件执行它们。</li>
  <li><a href="https://github.com/outpunk/postcss-modules"><code class="highlighter-rouge">postcss-modules</code></a> 和 <a href="https://github.com/gajus/react-css-modules"><code class="highlighter-rouge">react-css-modules</code></a> 可以自动以组件为单位隔绝 CSS 选择器。</li>
  <li><a href="https://github.com/maximkoretskiy/postcss-autoreset"><code class="highlighter-rouge">postcss-autoreset</code></a> 是全局样式重置的又一个选择，它更适用于分离的组件。</li>
  <li><a href="https://github.com/maximkoretskiy/postcss-initial"><code class="highlighter-rouge">postcss-initial</code></a> 添加了 <code class="highlighter-rouge">all: initial</code> 的支持，重置了所有继承的样式。</li>
  <li><a href="https://github.com/ausi/cq-prolyfill"><code class="highlighter-rouge">cq-prolyfill</code></a> 添加了容器查询的支持，允许添加响应于父元素宽度的样式.</li>
</ul>

<h3 id="提前使用先进的-css-特性">提前使用先进的 CSS 特性</h3>

<ul>
  <li><a href="https://github.com/postcss/autoprefixer"><code class="highlighter-rouge">autoprefixer</code></a> 添加了 vendor 浏览器前缀，它使用 Can I Use 上面的数据。</li>
  <li><a href="https://github.com/jonathantneal/postcss-preset-env"><code class="highlighter-rouge">postcss-preset-env</code></a> 允许你使用未来的 CSS 特性。</li>
</ul>

<h3 id="更佳的-css-可读性">更佳的 CSS 可读性</h3>

<ul>
  <li><a href="https://github.com/jonathantneal/precss"><code class="highlighter-rouge">precss</code></a> 囊括了许多插件来支持类似 Sass 的特性，比如 CSS 变量，套嵌，mixins 等。</li>
  <li><a href="https://github.com/hudochenkov/postcss-sorting"><code class="highlighter-rouge">postcss-sorting</code></a> 给规则的内容以及@规则排序。</li>
  <li><a href="https://github.com/ismamz/postcss-utilities"><code class="highlighter-rouge">postcss-utilities</code></a> 囊括了最常用的简写方式和书写帮助。</li>
  <li><a href="https://github.com/jonathantneal/postcss-short"><code class="highlighter-rouge">short</code></a> 添加并拓展了大量的缩写属性。</li>
</ul>

<h3 id="图片和字体">图片和字体</h3>

<ul>
  <li><a href="https://github.com/assetsjs/postcss-assets"><code class="highlighter-rouge">postcss-assets</code></a> 可以插入图片尺寸和内联文件。</li>
  <li><a href="https://github.com/2createStudio/postcss-sprites"><code class="highlighter-rouge">postcss-sprites</code></a> 能生成雪碧图。</li>
  <li><a href="https://github.com/jonathantneal/postcss-font-magician"><code class="highlighter-rouge">font-magician</code></a> 生成所有在 CSS 里需要的 <code class="highlighter-rouge">@font-face</code> 规则。</li>
  <li><a href="https://github.com/TrySound/postcss-inline-svg"><code class="highlighter-rouge">postcss-inline-svg</code></a> 允许你内联 SVG 并定制它的样式。</li>
  <li><a href="https://github.com/jonathantneal/postcss-write-svg"><code class="highlighter-rouge">postcss-write-svg</code></a> 允许你在 CSS 里写简单的 SVG。</li>
</ul>

<h3 id="提示器linters">提示器（Linters）</h3>

<ul>
  <li><a href="https://github.com/stylelint/stylelint"><code class="highlighter-rouge">stylelint</code></a> 是一个模块化的样式提示器。</li>
  <li><a href="https://github.com/morishitter/stylefmt"><code class="highlighter-rouge">stylefmt</code></a> 是一个能根据 <code class="highlighter-rouge">stylelint</code> 规则自动优化 CSS 格式的工具。</li>
  <li><a href="https://github.com/anandthakker/doiuse"><code class="highlighter-rouge">doiuse</code></a> 提示 CSS 的浏览器支持性，使用的数据来自于 Can I Use。</li>
  <li><a href="https://github.com/SlexAxton/css-colorguard"><code class="highlighter-rouge">colorguard</code></a> 帮助你保持一个始终如一的调色板。</li>
</ul>

<h3 id="其它">其它</h3>

<ul>
  <li><a href="https://github.com/vkalinichev/postcss-rtl"><code class="highlighter-rouge">postcss-rtl</code></a> 在单个 CSS 文件里组合了两个方向（左到右，右到左）的样式。</li>
  <li><a href="http://cssnano.co"><code class="highlighter-rouge">cssnano</code></a> 是一个模块化的 CSS 压缩器。</li>
  <li><a href="https://github.com/peterramsing/lost"><code class="highlighter-rouge">lost</code></a> 是一个功能强大的 <code class="highlighter-rouge">calc()</code> 栅格系统。</li>
  <li><a href="https://github.com/MohammadYounes/rtlcss"><code class="highlighter-rouge">rtlcss</code></a> 镜像翻转 CSS 样式，适用于 right-to-left 的应用场景。</li>
</ul>

<h2 id="语法">语法</h2>

<p>PostCSS 可以转化样式到任意语法，不仅仅是 CSS。
如果还没有支持你最喜欢的语法，你可以编写一个解释器以及（或者）一个 stringifier 来拓展 PostCSS。</p>

<ul>
  <li><a href="https://github.com/postcss/sugarss"><code class="highlighter-rouge">sugarss</code></a> 是一个以缩进为基础的语法，类似于 Sass 和 Stylus。</li>
  <li><a href="https://github.com/gucong3000/postcss-syntax"><code class="highlighter-rouge">postcss-syntax</code></a> 通过文件扩展名自动切换语法。</li>
  <li><a href="https://github.com/gucong3000/postcss-html"><code class="highlighter-rouge">postcss-html</code></a> 解析类 HTML 文件里<code class="highlighter-rouge">&lt;style&gt;</code>标签中的样式。</li>
  <li><a href="https://github.com/gucong3000/postcss-markdown"><code class="highlighter-rouge">postcss-markdown</code></a> 解析 Markdown 文件里代码块中的样式。</li>
  <li><a href="https://github.com/gucong3000/postcss-jsx"><code class="highlighter-rouge">postcss-jsx</code></a> 解析源文件里模板或对象字面量中的CSS。</li>
  <li><a href="https://github.com/gucong3000/postcss-styled"><code class="highlighter-rouge">postcss-styled</code></a> 解析源文件里模板字面量中的CSS。</li>
  <li><a href="https://github.com/postcss/postcss-scss"><code class="highlighter-rouge">postcss-scss</code></a> 允许你使用 SCSS <em>(但并没有将 SCSS 编译到 CSS)</em>。</li>
  <li><a href="https://github.com/AleshaOleg/postcss-sass"><code class="highlighter-rouge">postcss-sass</code></a> 允许你使用 Sass <em>(但并没有将 Sass 编译到 CSS)</em>。</li>
  <li><a href="https://github.com/webschik/postcss-less"><code class="highlighter-rouge">postcss-less</code></a> 允许你使用 Less <em>(但并没有将 LESS 编译到 CSS)</em>。</li>
  <li><a href="https://github.com/Crunch/postcss-less"><code class="highlighter-rouge">postcss-less-engine</code></a> 允许你使用 Less <em>(并且使用真正的 Less.js 把 LESS 编译到 CSS)</em>。</li>
  <li><a href="https://github.com/postcss/postcss-js"><code class="highlighter-rouge">postcss-js</code></a> 允许你在 JS 里编写样式，或者转换成 React 的内联样式／Radium／JSS。</li>
  <li><a href="https://github.com/postcss/postcss-safe-parser"><code class="highlighter-rouge">postcss-safe-parser</code></a> 查找并修复 CSS 语法错误。</li>
  <li><a href="https://github.com/ben-eb/midas"><code class="highlighter-rouge">midas</code></a> 将 CSS 字符串转化成高亮的 HTML。</li>
</ul>

<h2 id="文章">文章</h2>

<ul>
  <li><a href="http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong">一些你对 PostCSS 可能产生的误解</a></li>
  <li><a href="http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss">PostCSS 究竟是什么，是做什么的</a></li>
  <li><a href="http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889">PostCSS 指南</a></li>
</ul>

<p>你可以在 <a href="https://github.com/jjaderg/awesome-postcss">awesome-postcss</a> 列表里找到更多优秀的文章和视频。</p>

<h2 id="书籍">书籍</h2>

<ul>
  <li>Alex Libby, Packt 的 <a href="https://www.packtpub.com/web-development/mastering-postcss-web-design">网页设计之精通 PostCSS</a> (2016年6月)</li>
</ul>

<h2 id="使用方法">使用方法</h2>

<p>你可以通过简单的两步便开始使用 PostCSS：</p>

<ol>
  <li>在你的构建工具中查找并添加 PostCSS 拓展。</li>
  <li><a href="http://postcss.parts">选择插件</a>并将它们添加到你的 PostCSS 处理队列中。</li>
</ol>

<h3 id="webpack">Webpack</h3>

<p>在 <code class="highlighter-rouge">webpack.config.js</code> 里使用 <a href="https://github.com/postcss/postcss-loader"><code class="highlighter-rouge">postcss-loader</code></a> :</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">module</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">rules</span><span class="p">:</span> <span class="p">[</span>
            <span class="p">{</span>
                <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">css$/</span><span class="p">,</span>
                <span class="na">exclude</span><span class="p">:</span> <span class="sr">/node_modules/</span><span class="p">,</span>
                <span class="na">use</span><span class="p">:</span> <span class="p">[</span>
                    <span class="p">{</span>
                        <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">style-loader</span><span class="dl">'</span><span class="p">,</span>
                    <span class="p">},</span>
                    <span class="p">{</span>
                        <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">css-loader</span><span class="dl">'</span><span class="p">,</span>
                        <span class="na">options</span><span class="p">:</span> <span class="p">{</span>
                            <span class="na">importLoaders</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                        <span class="p">}</span>
                    <span class="p">},</span>
                    <span class="p">{</span>
                        <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">postcss-loader</span><span class="dl">'</span>
                    <span class="p">}</span>
                <span class="p">]</span>
            <span class="p">}</span>
        <span class="p">]</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>然后创建 <code class="highlighter-rouge">postcss.config.js</code>:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">plugins</span><span class="p">:</span> <span class="p">[</span>
        <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">precss</span><span class="dl">'</span><span class="p">),</span>
        <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">autoprefixer</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="gulp">Gulp</h3>

<p>使用 <a href="https://github.com/postcss/gulp-postcss"><code class="highlighter-rouge">gulp-postcss</code></a> 和 <a href="https://github.com/floridoo/gulp-sourcemaps"><code class="highlighter-rouge">gulp-sourcemaps</code></a>.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="dl">'</span><span class="s1">css</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">postcss</span>    <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">gulp-postcss</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">sourcemaps</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">gulp-sourcemaps</span><span class="dl">'</span><span class="p">);</span>

    <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="dl">'</span><span class="s1">src/**/*.css</span><span class="dl">'</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span> <span class="nx">sourcemaps</span><span class="p">.</span><span class="nx">init</span><span class="p">()</span> <span class="p">)</span>
        <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span> <span class="nx">postcss</span><span class="p">([</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">precss</span><span class="dl">'</span><span class="p">),</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">autoprefixer</span><span class="dl">'</span><span class="p">)</span> <span class="p">])</span> <span class="p">)</span>
        <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span> <span class="nx">sourcemaps</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="dl">'</span><span class="s1">.</span><span class="dl">'</span><span class="p">)</span> <span class="p">)</span>
        <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="dl">'</span><span class="s1">build/</span><span class="dl">'</span><span class="p">)</span> <span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<h3 id="npm-run--cli">npm run / CLI</h3>

<p>如果需要在你的命令行界面或 npm 脚本里使用 PostCSS，你可以使用 <a href="https://github.com/postcss/postcss-cli"><code class="highlighter-rouge">postcss-cli</code></a>。</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>postcss <span class="nt">--use</span> autoprefixer <span class="nt">-c</span> options.json <span class="nt">-o</span> main.css css/<span class="k">*</span>.css
</code></pre></div></div>

<h3 id="浏览器">浏览器</h3>

<p>如果你想编译浏览器里的 CSS 字符串（例如像 CodePen 一样的在线编辑器），
只需使用 <a href="http://browserify.org/">Browserify</a> 或  <a href="https://webpack.github.io/">webpack</a>。它们会把 PostCSS 和插件文件打包进一个独立文件。</p>

<p>如果想要在 React 内联样式／JSS／Radium／其它 <a href="https://github.com/MicheleBertoli/css-in-js">CSS-in-JS</a> 里使用 PostCSS，
你可以用 <a href="https://github.com/postcss/postcss-js"><code class="highlighter-rouge">postcss-js</code></a> 然后转换样式对象。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">postcss</span>  <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">postcss-js</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">prefixer</span> <span class="o">=</span> <span class="nx">postcss</span><span class="p">.</span><span class="nx">sync</span><span class="p">([</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">autoprefixer</span><span class="dl">'</span><span class="p">)</span> <span class="p">]);</span>

<span class="nx">prefixer</span><span class="p">({</span> <span class="na">display</span><span class="p">:</span> <span class="dl">'</span><span class="s1">flex</span><span class="dl">'</span> <span class="p">});</span> <span class="c1">//=&gt; { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }</span>
</code></pre></div></div>

<h3 id="运行器">运行器</h3>

<ul>
  <li><strong>Grunt</strong>: <a href="https://github.com/nDmitry/grunt-postcss"><code class="highlighter-rouge">grunt-postcss</code></a></li>
  <li><strong>HTML</strong>: <a href="https://github.com/posthtml/posthtml-postcss"><code class="highlighter-rouge">posthtml-postcss</code></a></li>
  <li><strong>Stylus</strong>: <a href="https://github.com/seaneking/poststylus"><code class="highlighter-rouge">poststylus</code></a></li>
  <li><strong>Rollup</strong>: <a href="https://github.com/egoist/rollup-plugin-postcss"><code class="highlighter-rouge">rollup-plugin-postcss</code></a></li>
  <li><strong>Brunch</strong>: <a href="https://github.com/brunch/postcss-brunch"><code class="highlighter-rouge">postcss-brunch</code></a></li>
  <li><strong>Broccoli</strong>: <a href="https://github.com/jeffjewiss/broccoli-postcss"><code class="highlighter-rouge">broccoli-postcss</code></a></li>
  <li><strong>Meteor</strong>: <a href="https://atmospherejs.com/juliancwirko/postcss"><code class="highlighter-rouge">postcss</code></a></li>
  <li><strong>ENB</strong>: <a href="https://github.com/awinogradov/enb-postcss"><code class="highlighter-rouge">enb-postcss</code></a></li>
  <li><strong>Taskr</strong>: <a href="https://github.com/lukeed/taskr/tree/master/packages/postcss"><code class="highlighter-rouge">taskr-postcss</code></a></li>
  <li><strong>Start</strong>: <a href="https://github.com/start-runner/postcss"><code class="highlighter-rouge">start-postcss</code></a></li>
  <li><strong>Connect/Express</strong>: <a href="https://github.com/jedmao/postcss-middleware"><code class="highlighter-rouge">postcss-middleware</code></a></li>
</ul>

<h3 id="js-api">JS API</h3>

<p>对于其它的应用环境，你可以使用 JS API：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">fs</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">postcss</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">postcss</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">precss</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">precss</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">autoprefixer</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">autoprefixer</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">src/app.css</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">css</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">postcss</span><span class="p">([</span><span class="nx">precss</span><span class="p">,</span> <span class="nx">autoprefixer</span><span class="p">])</span>
        <span class="p">.</span><span class="nx">process</span><span class="p">(</span><span class="nx">css</span><span class="p">,</span> <span class="p">{</span> <span class="na">from</span><span class="p">:</span> <span class="dl">'</span><span class="s1">src/app.css</span><span class="dl">'</span><span class="p">,</span> <span class="na">to</span><span class="p">:</span> <span class="dl">'</span><span class="s1">dest/app.css</span><span class="dl">'</span> <span class="p">})</span>
        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">dest/app.css</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">.</span><span class="nx">css</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span> <span class="nx">result</span><span class="p">.</span><span class="nx">map</span> <span class="p">)</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">dest/app.css.map</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">.</span><span class="nx">map</span><span class="p">);</span>
        <span class="p">});</span>
<span class="p">});</span>
</code></pre></div></div>

<p>阅读 <a href="http://api.postcss.org/postcss.html">PostCSS API 文档</a> 获取更多有关 JS API 的信息.</p>

<p>所有的 PostCSS 运行器应当通过 <a href="https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md">PostCSS 运行器指南</a>。</p>

<h3 id="配置选项">配置选项</h3>

<p>绝大多数 PostCSS 运行器接受两个参数：</p>

<ul>
  <li>一个包含所需插件的数组</li>
  <li>一个配置选项的对象</li>
</ul>

<p>常见的选项：</p>

<ul>
  <li><code class="highlighter-rouge">syntax</code>: 一个提供了语法解释器和 stringifier 的对象。</li>
  <li><code class="highlighter-rouge">parser</code>: 一个特殊的语法解释器（例如 <a href="https://github.com/postcss/postcss-scss">SCSS</a>）。</li>
  <li><code class="highlighter-rouge">stringifier</code>: 一个特殊的语法 output 生成器（例如 <a href="https://github.com/ben-eb/midas">Midas</a>）。</li>
  <li><code class="highlighter-rouge">map</code>: <a href="https://github.com/postcss/postcss/blob/master/docs/source-maps.md">source map 选项</a>.</li>
  <li><code class="highlighter-rouge">from</code>: input 文件名称（大多数运行器自动设置了这个）。</li>
  <li><code class="highlighter-rouge">to</code>: output 文件名称（大多数运行器自动设置了这个）。</li>
</ul>

<h3 id="atom">Atom</h3>

<ul>
  <li><a href="https://atom.io/packages/language-postcss"><code class="highlighter-rouge">language-postcss</code></a> 添加了 PostCSS 和 <a href="https://github.com/postcss/sugarss">SugarSS</a> 代码高亮。</li>
  <li><a href="https://atom.io/packages/source-preview-postcss"><code class="highlighter-rouge">source-preview-postcss</code></a> 在一个独立窗口里实时预览生成的 CSS。</li>
</ul>

<h3 id="sublime-text">Sublime Text</h3>

<ul>
  <li><a href="https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS"><code class="highlighter-rouge">Syntax-highlighting-for-PostCSS</code></a> 添加了 PostCSS 代码高亮。</li>
</ul>

<h3 id="vim">Vim</h3>

<ul>
  <li><a href="https://github.com/stephenway/postcss.vim"><code class="highlighter-rouge">postcss.vim</code></a> 添加了 PostCSS 代码高亮。</li>
</ul>

<h3 id="webstorm">WebStorm</h3>

<p>自 WebStorm 2016.3 开始，<a href="https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/">提供了</a> 内建的 PostCSS 支持。</p>


</article>

            </section>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                feather.replace({
                    width: 32,
                    height: 32,
                })
            })
        </script>
    </body>
</html>
